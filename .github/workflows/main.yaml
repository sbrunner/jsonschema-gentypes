name: Continuous integration

on:
  push:
    branches:
      - master
      - '[0-9]+.[0-9]+'
    tags:
      - '*'
  pull_request:

permissions:
  contents: write
  id-token: write

env:
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}
  PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    strategy:
      fail-fast: false
      matrix:
        # Should be reported in outputs and in last check
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          # On 3.12 we get something like https://github.com/pypa/setuptools/issues/4102 on install
          # - '3.12'

    outputs:
      success-3-9: ${{ steps.success.outputs.success-3-9 }}
      success-3-10: ${{ steps.success.outputs.success-3-10 }}
      success-3-11: ${{ steps.success.outputs.success-3-11 }}

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/checkout@v5
      - run: make pytest

      - id: success
        run: |
          version=${{ matrix.python-version }}
          echo "success-${version//\./-}=true" >> $GITHUB_OUTPUT

  main:
    name: Continuous integration
    runs-on: ubuntu-24.04
    timeout-minutes: 40
    if: always() && !startsWith(github.event.head_commit.message, '[skip ci] ')
    needs: test

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v6
        with:
          python-version: '3.14'
      - run: python3 -m pip install --requirement=ci/requirements.txt

      - name: Print environment information
        run: c2cciutils-env

      - run: pip install -e .
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: "pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}\npre-commit-"
      - run: pre-commit run --all-files --color=always
      - run: git diff --exit-code --patch > /tmp/pre-commit.patch; git diff --color; git reset --hard || true
        if: failure()

      - uses: actions/upload-artifact@v4
        with:
          name: Apply pre-commit fix.patch
          path: /tmp/pre-commit.patch
          retention-days: 1
        if: failure()
      - run: make prospector

      - run: python3 -m pip install --requirement=ci/requirements.txt
      - name: Init pypi
        run: |-
          echo "[pypi]" > ~/.pypirc
          echo "username = ${{ secrets.PYPI_USERNAME }}" >> ~/.pypirc
          echo "password = ${{ secrets.PYPI_PASSWORD }}" >> ~/.pypirc
        if: env.HAS_SECRETS == 'HAS_SECRETS'
      - name: Publish
        run: tag-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        if: env.HAS_SECRETS == 'HAS_SECRETS'
      - run: git diff --exit-code --patch > /tmp/dpkg-versions.patch; git diff --color; git reset --hard || true
        if: failure()
      - uses: actions/upload-artifact@v4
        with:
          name: Update dpkg versions list.patch
          path: /tmp/dpkg-versions.patch
          retention-days: 1
        if: failure()

      # Check success
      - run: '[[ "${{ needs.test.outputs.success-3-9 }}" == "true" ]]'
      - run: '[[ "${{ needs.test.outputs.success-3-10 }}" == "true" ]]'
      - run: '[[ "${{ needs.test.outputs.success-3-11 }}" == "true" ]]'
